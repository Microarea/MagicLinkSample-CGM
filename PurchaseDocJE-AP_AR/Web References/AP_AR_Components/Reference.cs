//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace PurchaseDocJE_AP_AR.AP_AR_Components {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AP_ARComponentsSoap", Namespace="urn:Microarea.Web.Services")]
    public partial class AP_ARComponents : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private TBHeaderInfo headerInfoField;
        
        private System.Threading.SendOrPostCallback ReqForPymtMaxLevelOperationCompleted;
        
        private System.Threading.SendOrPostCallback RequestForPaymentFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback RequestForPaymentCustUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback InstallmentDetails_CreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback InstallmentDetails_DisposeOperationCompleted;
        
        private System.Threading.SendOrPostCallback InstallmentDetails_CalculateInstallmentDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalcWithholdingTaxBalance_CreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalcWithholdingTaxBalance_DisposeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalcWithholdingTaxBalance_CalculateWithholdingTaxBalanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback SplitVAT_CreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SplitVAT_DisposeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SplitVAT_VATDescendingRateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AP_ARComponents() {
            this.Url = global::PurchaseDocJE_AP_AR.Properties.Settings.Default.PurchaseDocJE_AP_AR_AP_AR_Components_AP_ARComponents;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public TBHeaderInfo HeaderInfo {
            get {
                return this.headerInfoField;
            }
            set {
                this.headerInfoField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ReqForPymtMaxLevelCompletedEventHandler ReqForPymtMaxLevelCompleted;
        
        /// <remarks/>
        public event RequestForPaymentFileCompletedEventHandler RequestForPaymentFileCompleted;
        
        /// <remarks/>
        public event RequestForPaymentCustUpdateCompletedEventHandler RequestForPaymentCustUpdateCompleted;
        
        /// <remarks/>
        public event InstallmentDetails_CreateCompletedEventHandler InstallmentDetails_CreateCompleted;
        
        /// <remarks/>
        public event InstallmentDetails_DisposeCompletedEventHandler InstallmentDetails_DisposeCompleted;
        
        /// <remarks/>
        public event InstallmentDetails_CalculateInstallmentDataCompletedEventHandler InstallmentDetails_CalculateInstallmentDataCompleted;
        
        /// <remarks/>
        public event CalcWithholdingTaxBalance_CreateCompletedEventHandler CalcWithholdingTaxBalance_CreateCompleted;
        
        /// <remarks/>
        public event CalcWithholdingTaxBalance_DisposeCompletedEventHandler CalcWithholdingTaxBalance_DisposeCompleted;
        
        /// <remarks/>
        public event CalcWithholdingTaxBalance_CalculateWithholdingTaxBalanceCompletedEventHandler CalcWithholdingTaxBalance_CalculateWithholdingTaxBalanceCompleted;
        
        /// <remarks/>
        public event SplitVAT_CreateCompletedEventHandler SplitVAT_CreateCompleted;
        
        /// <remarks/>
        public event SplitVAT_DisposeCompletedEventHandler SplitVAT_DisposeCompleted;
        
        /// <remarks/>
        public event SplitVAT_VATDescendingRateCompletedEventHandler SplitVAT_VATDescendingRateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("HeaderInfo", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#ReqForPymtMaxLevel", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Namespace="urn:Microarea.Web.Services.ReqForPymtMaxLevel")]
        public int ReqForPymtMaxLevel() {
            object[] results = this.Invoke("ReqForPymtMaxLevel", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ReqForPymtMaxLevelAsync() {
            this.ReqForPymtMaxLevelAsync(null);
        }
        
        /// <remarks/>
        public void ReqForPymtMaxLevelAsync(object userState) {
            if ((this.ReqForPymtMaxLevelOperationCompleted == null)) {
                this.ReqForPymtMaxLevelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReqForPymtMaxLevelOperationCompleted);
            }
            this.InvokeAsync("ReqForPymtMaxLevel", new object[0], this.ReqForPymtMaxLevelOperationCompleted, userState);
        }
        
        private void OnReqForPymtMaxLevelOperationCompleted(object arg) {
            if ((this.ReqForPymtMaxLevelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReqForPymtMaxLevelCompleted(this, new ReqForPymtMaxLevelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("HeaderInfo", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#RequestForPaymentFile", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Namespace="urn:Microarea.Web.Services.RequestForPaymentFile")]
        public bool RequestForPaymentFile([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:Microarea.Web.Services.RequestForPaymentFile")] int lastLevelNo, [System.Xml.Serialization.XmlElementAttribute(Namespace="urn:Microarea.Web.Services.RequestForPaymentFile", IsNullable=true)] ref string openingText, [System.Xml.Serialization.XmlElementAttribute(Namespace="urn:Microarea.Web.Services.RequestForPaymentFile", IsNullable=true)] ref string closingText) {
            object[] results = this.Invoke("RequestForPaymentFile", new object[] {
                        lastLevelNo,
                        openingText,
                        closingText});
            openingText = ((string)(results[1]));
            closingText = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RequestForPaymentFileAsync(int lastLevelNo, string openingText, string closingText) {
            this.RequestForPaymentFileAsync(lastLevelNo, openingText, closingText, null);
        }
        
        /// <remarks/>
        public void RequestForPaymentFileAsync(int lastLevelNo, string openingText, string closingText, object userState) {
            if ((this.RequestForPaymentFileOperationCompleted == null)) {
                this.RequestForPaymentFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequestForPaymentFileOperationCompleted);
            }
            this.InvokeAsync("RequestForPaymentFile", new object[] {
                        lastLevelNo,
                        openingText,
                        closingText}, this.RequestForPaymentFileOperationCompleted, userState);
        }
        
        private void OnRequestForPaymentFileOperationCompleted(object arg) {
            if ((this.RequestForPaymentFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequestForPaymentFileCompleted(this, new RequestForPaymentFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("HeaderInfo", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#RequestForPaymentCustUpdate", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Namespace="urn:Microarea.Web.Services.RequestForPaymentCustUpdate")]
        public int RequestForPaymentCustUpdate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:Microarea.Web.Services.RequestForPaymentCustUpdate", IsNullable=true)] string customer, [System.Xml.Serialization.XmlElementAttribute(Namespace="urn:Microarea.Web.Services.RequestForPaymentCustUpdate", IsNullable=true)] string dueDate, [System.Xml.Serialization.XmlElementAttribute(Namespace="urn:Microarea.Web.Services.RequestForPaymentCustUpdate", IsNullable=true)] string printDate) {
            object[] results = this.Invoke("RequestForPaymentCustUpdate", new object[] {
                        customer,
                        dueDate,
                        printDate});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RequestForPaymentCustUpdateAsync(string customer, string dueDate, string printDate) {
            this.RequestForPaymentCustUpdateAsync(customer, dueDate, printDate, null);
        }
        
        /// <remarks/>
        public void RequestForPaymentCustUpdateAsync(string customer, string dueDate, string printDate, object userState) {
            if ((this.RequestForPaymentCustUpdateOperationCompleted == null)) {
                this.RequestForPaymentCustUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequestForPaymentCustUpdateOperationCompleted);
            }
            this.InvokeAsync("RequestForPaymentCustUpdate", new object[] {
                        customer,
                        dueDate,
                        printDate}, this.RequestForPaymentCustUpdateOperationCompleted, userState);
        }
        
        private void OnRequestForPaymentCustUpdateOperationCompleted(object arg) {
            if ((this.RequestForPaymentCustUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequestForPaymentCustUpdateCompleted(this, new RequestForPaymentCustUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("HeaderInfo", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#InstallmentDetails_Create", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Namespace="urn:Microarea.Web.Services.InstallmentDetails_Create")]
        public int InstallmentDetails_Create() {
            object[] results = this.Invoke("InstallmentDetails_Create", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InstallmentDetails_CreateAsync() {
            this.InstallmentDetails_CreateAsync(null);
        }
        
        /// <remarks/>
        public void InstallmentDetails_CreateAsync(object userState) {
            if ((this.InstallmentDetails_CreateOperationCompleted == null)) {
                this.InstallmentDetails_CreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInstallmentDetails_CreateOperationCompleted);
            }
            this.InvokeAsync("InstallmentDetails_Create", new object[0], this.InstallmentDetails_CreateOperationCompleted, userState);
        }
        
        private void OnInstallmentDetails_CreateOperationCompleted(object arg) {
            if ((this.InstallmentDetails_CreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InstallmentDetails_CreateCompleted(this, new InstallmentDetails_CreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("HeaderInfo", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#InstallmentDetails_Dispose", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Namespace="urn:Microarea.Web.Services.InstallmentDetails_Dispose")]
        public bool InstallmentDetails_Dispose([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:Microarea.Web.Services.InstallmentDetails_Dispose")] int handle) {
            object[] results = this.Invoke("InstallmentDetails_Dispose", new object[] {
                        handle});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InstallmentDetails_DisposeAsync(int handle) {
            this.InstallmentDetails_DisposeAsync(handle, null);
        }
        
        /// <remarks/>
        public void InstallmentDetails_DisposeAsync(int handle, object userState) {
            if ((this.InstallmentDetails_DisposeOperationCompleted == null)) {
                this.InstallmentDetails_DisposeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInstallmentDetails_DisposeOperationCompleted);
            }
            this.InvokeAsync("InstallmentDetails_Dispose", new object[] {
                        handle}, this.InstallmentDetails_DisposeOperationCompleted, userState);
        }
        
        private void OnInstallmentDetails_DisposeOperationCompleted(object arg) {
            if ((this.InstallmentDetails_DisposeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InstallmentDetails_DisposeCompleted(this, new InstallmentDetails_DisposeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("HeaderInfo", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#InstallmentDetails_CalculateInstallmentData", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Namespace="urn:Microarea.Web.Services.InstallmentDetails_CalculateInstallmentData")]
        public bool InstallmentDetails_CalculateInstallmentData([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:Microarea.Web.Services.InstallmentDetails_CalculateInstallmentData")] int handle, [System.Xml.Serialization.XmlElementAttribute(Namespace="urn:Microarea.Web.Services.InstallmentDetails_CalculateInstallmentData", IsNullable=true)] string PymtCode, [System.Xml.Serialization.XmlElementAttribute(Namespace="urn:Microarea.Web.Services.InstallmentDetails_CalculateInstallmentData", IsNullable=true)] string Currency, [System.Xml.Serialization.XmlElementAttribute(Namespace="urn:Microarea.Web.Services.InstallmentDetails_CalculateInstallmentData", IsNullable=true)] string FromDate, [System.Xml.Serialization.XmlElementAttribute(Namespace="urn:Microarea.Web.Services.InstallmentDetails_CalculateInstallmentData")] double Total, [System.Xml.Serialization.XmlElementAttribute(Namespace="urn:Microarea.Web.Services.InstallmentDetails_CalculateInstallmentData")] double TaxTotal, [System.Xml.Serialization.XmlElementAttribute(Namespace="urn:Microarea.Web.Services.InstallmentDetails_CalculateInstallmentData")] ref int InstallmentNo, [System.Xml.Serialization.XmlElementAttribute(Namespace="urn:Microarea.Web.Services.InstallmentDetails_CalculateInstallmentData", IsNullable=true)] ref string InstallmentDate, [System.Xml.Serialization.XmlElementAttribute(Namespace="urn:Microarea.Web.Services.InstallmentDetails_CalculateInstallmentData")] ref int InstallmentPaymentType, [System.Xml.Serialization.XmlElementAttribute(Namespace="urn:Microarea.Web.Services.InstallmentDetails_CalculateInstallmentData")] ref double InstallmentAmount) {
            object[] results = this.Invoke("InstallmentDetails_CalculateInstallmentData", new object[] {
                        handle,
                        PymtCode,
                        Currency,
                        FromDate,
                        Total,
                        TaxTotal,
                        InstallmentNo,
                        InstallmentDate,
                        InstallmentPaymentType,
                        InstallmentAmount});
            InstallmentNo = ((int)(results[1]));
            InstallmentDate = ((string)(results[2]));
            InstallmentPaymentType = ((int)(results[3]));
            InstallmentAmount = ((double)(results[4]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InstallmentDetails_CalculateInstallmentDataAsync(int handle, string PymtCode, string Currency, string FromDate, double Total, double TaxTotal, int InstallmentNo, string InstallmentDate, int InstallmentPaymentType, double InstallmentAmount) {
            this.InstallmentDetails_CalculateInstallmentDataAsync(handle, PymtCode, Currency, FromDate, Total, TaxTotal, InstallmentNo, InstallmentDate, InstallmentPaymentType, InstallmentAmount, null);
        }
        
        /// <remarks/>
        public void InstallmentDetails_CalculateInstallmentDataAsync(int handle, string PymtCode, string Currency, string FromDate, double Total, double TaxTotal, int InstallmentNo, string InstallmentDate, int InstallmentPaymentType, double InstallmentAmount, object userState) {
            if ((this.InstallmentDetails_CalculateInstallmentDataOperationCompleted == null)) {
                this.InstallmentDetails_CalculateInstallmentDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInstallmentDetails_CalculateInstallmentDataOperationCompleted);
            }
            this.InvokeAsync("InstallmentDetails_CalculateInstallmentData", new object[] {
                        handle,
                        PymtCode,
                        Currency,
                        FromDate,
                        Total,
                        TaxTotal,
                        InstallmentNo,
                        InstallmentDate,
                        InstallmentPaymentType,
                        InstallmentAmount}, this.InstallmentDetails_CalculateInstallmentDataOperationCompleted, userState);
        }
        
        private void OnInstallmentDetails_CalculateInstallmentDataOperationCompleted(object arg) {
            if ((this.InstallmentDetails_CalculateInstallmentDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InstallmentDetails_CalculateInstallmentDataCompleted(this, new InstallmentDetails_CalculateInstallmentDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("HeaderInfo", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#CalcWithholdingTaxBalance_Create", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Namespace="urn:Microarea.Web.Services.CalcWithholdingTaxBalance_Create")]
        public int CalcWithholdingTaxBalance_Create() {
            object[] results = this.Invoke("CalcWithholdingTaxBalance_Create", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CalcWithholdingTaxBalance_CreateAsync() {
            this.CalcWithholdingTaxBalance_CreateAsync(null);
        }
        
        /// <remarks/>
        public void CalcWithholdingTaxBalance_CreateAsync(object userState) {
            if ((this.CalcWithholdingTaxBalance_CreateOperationCompleted == null)) {
                this.CalcWithholdingTaxBalance_CreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalcWithholdingTaxBalance_CreateOperationCompleted);
            }
            this.InvokeAsync("CalcWithholdingTaxBalance_Create", new object[0], this.CalcWithholdingTaxBalance_CreateOperationCompleted, userState);
        }
        
        private void OnCalcWithholdingTaxBalance_CreateOperationCompleted(object arg) {
            if ((this.CalcWithholdingTaxBalance_CreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalcWithholdingTaxBalance_CreateCompleted(this, new CalcWithholdingTaxBalance_CreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("HeaderInfo", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#CalcWithholdingTaxBalance_Dispose", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Namespace="urn:Microarea.Web.Services.CalcWithholdingTaxBalance_Dispose")]
        public bool CalcWithholdingTaxBalance_Dispose([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:Microarea.Web.Services.CalcWithholdingTaxBalance_Dispose")] int handle) {
            object[] results = this.Invoke("CalcWithholdingTaxBalance_Dispose", new object[] {
                        handle});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CalcWithholdingTaxBalance_DisposeAsync(int handle) {
            this.CalcWithholdingTaxBalance_DisposeAsync(handle, null);
        }
        
        /// <remarks/>
        public void CalcWithholdingTaxBalance_DisposeAsync(int handle, object userState) {
            if ((this.CalcWithholdingTaxBalance_DisposeOperationCompleted == null)) {
                this.CalcWithholdingTaxBalance_DisposeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalcWithholdingTaxBalance_DisposeOperationCompleted);
            }
            this.InvokeAsync("CalcWithholdingTaxBalance_Dispose", new object[] {
                        handle}, this.CalcWithholdingTaxBalance_DisposeOperationCompleted, userState);
        }
        
        private void OnCalcWithholdingTaxBalance_DisposeOperationCompleted(object arg) {
            if ((this.CalcWithholdingTaxBalance_DisposeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalcWithholdingTaxBalance_DisposeCompleted(this, new CalcWithholdingTaxBalance_DisposeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("HeaderInfo", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#CalcWithholdingTaxBalance_CalculateWithholdingTaxBalance", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Namespace="urn:Microarea.Web.Services.CalcWithholdingTaxBalance_CalculateWithholdingTaxBalan" +
            "ce")]
        public double CalcWithholdingTaxBalance_CalculateWithholdingTaxBalance([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:Microarea.Web.Services.CalcWithholdingTaxBalance_CalculateWithholdingTaxBalan" +
            "ce")] int handle, [System.Xml.Serialization.XmlElementAttribute(Namespace="urn:Microarea.Web.Services.CalcWithholdingTaxBalance_CalculateWithholdingTaxBalan" +
            "ce")] ref int aPymtSchedId, [System.Xml.Serialization.XmlElementAttribute(Namespace="urn:Microarea.Web.Services.CalcWithholdingTaxBalance_CalculateWithholdingTaxBalan" +
            "ce")] ref double aBalance) {
            object[] results = this.Invoke("CalcWithholdingTaxBalance_CalculateWithholdingTaxBalance", new object[] {
                        handle,
                        aPymtSchedId,
                        aBalance});
            aPymtSchedId = ((int)(results[1]));
            aBalance = ((double)(results[2]));
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void CalcWithholdingTaxBalance_CalculateWithholdingTaxBalanceAsync(int handle, int aPymtSchedId, double aBalance) {
            this.CalcWithholdingTaxBalance_CalculateWithholdingTaxBalanceAsync(handle, aPymtSchedId, aBalance, null);
        }
        
        /// <remarks/>
        public void CalcWithholdingTaxBalance_CalculateWithholdingTaxBalanceAsync(int handle, int aPymtSchedId, double aBalance, object userState) {
            if ((this.CalcWithholdingTaxBalance_CalculateWithholdingTaxBalanceOperationCompleted == null)) {
                this.CalcWithholdingTaxBalance_CalculateWithholdingTaxBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalcWithholdingTaxBalance_CalculateWithholdingTaxBalanceOperationCompleted);
            }
            this.InvokeAsync("CalcWithholdingTaxBalance_CalculateWithholdingTaxBalance", new object[] {
                        handle,
                        aPymtSchedId,
                        aBalance}, this.CalcWithholdingTaxBalance_CalculateWithholdingTaxBalanceOperationCompleted, userState);
        }
        
        private void OnCalcWithholdingTaxBalance_CalculateWithholdingTaxBalanceOperationCompleted(object arg) {
            if ((this.CalcWithholdingTaxBalance_CalculateWithholdingTaxBalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalcWithholdingTaxBalance_CalculateWithholdingTaxBalanceCompleted(this, new CalcWithholdingTaxBalance_CalculateWithholdingTaxBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("HeaderInfo", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#SplitVAT_Create", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Namespace="urn:Microarea.Web.Services.SplitVAT_Create")]
        public int SplitVAT_Create() {
            object[] results = this.Invoke("SplitVAT_Create", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SplitVAT_CreateAsync() {
            this.SplitVAT_CreateAsync(null);
        }
        
        /// <remarks/>
        public void SplitVAT_CreateAsync(object userState) {
            if ((this.SplitVAT_CreateOperationCompleted == null)) {
                this.SplitVAT_CreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSplitVAT_CreateOperationCompleted);
            }
            this.InvokeAsync("SplitVAT_Create", new object[0], this.SplitVAT_CreateOperationCompleted, userState);
        }
        
        private void OnSplitVAT_CreateOperationCompleted(object arg) {
            if ((this.SplitVAT_CreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SplitVAT_CreateCompleted(this, new SplitVAT_CreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("HeaderInfo", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#SplitVAT_Dispose", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Namespace="urn:Microarea.Web.Services.SplitVAT_Dispose")]
        public bool SplitVAT_Dispose([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:Microarea.Web.Services.SplitVAT_Dispose")] int handle) {
            object[] results = this.Invoke("SplitVAT_Dispose", new object[] {
                        handle});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SplitVAT_DisposeAsync(int handle) {
            this.SplitVAT_DisposeAsync(handle, null);
        }
        
        /// <remarks/>
        public void SplitVAT_DisposeAsync(int handle, object userState) {
            if ((this.SplitVAT_DisposeOperationCompleted == null)) {
                this.SplitVAT_DisposeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSplitVAT_DisposeOperationCompleted);
            }
            this.InvokeAsync("SplitVAT_Dispose", new object[] {
                        handle}, this.SplitVAT_DisposeOperationCompleted, userState);
        }
        
        private void OnSplitVAT_DisposeOperationCompleted(object arg) {
            if ((this.SplitVAT_DisposeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SplitVAT_DisposeCompleted(this, new SplitVAT_DisposeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("HeaderInfo", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("#SplitVAT_VATDescendingRate", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Namespace="urn:Microarea.Web.Services.SplitVAT_VATDescendingRate")]
        public double SplitVAT_VATDescendingRate([System.Xml.Serialization.XmlElementAttribute(Namespace="urn:Microarea.Web.Services.SplitVAT_VATDescendingRate")] int handle, [System.Xml.Serialization.XmlElementAttribute(Namespace="urn:Microarea.Web.Services.SplitVAT_VATDescendingRate")] int aPymtSchedId, [System.Xml.Serialization.XmlElementAttribute(Namespace="urn:Microarea.Web.Services.SplitVAT_VATDescendingRate")] double aAmount, [System.Xml.Serialization.XmlElementAttribute(Namespace="urn:Microarea.Web.Services.SplitVAT_VATDescendingRate", IsNullable=true)] string aCollPymtDate, [System.Xml.Serialization.XmlElementAttribute(Namespace="urn:Microarea.Web.Services.SplitVAT_VATDescendingRate")] int aAmountType) {
            object[] results = this.Invoke("SplitVAT_VATDescendingRate", new object[] {
                        handle,
                        aPymtSchedId,
                        aAmount,
                        aCollPymtDate,
                        aAmountType});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void SplitVAT_VATDescendingRateAsync(int handle, int aPymtSchedId, double aAmount, string aCollPymtDate, int aAmountType) {
            this.SplitVAT_VATDescendingRateAsync(handle, aPymtSchedId, aAmount, aCollPymtDate, aAmountType, null);
        }
        
        /// <remarks/>
        public void SplitVAT_VATDescendingRateAsync(int handle, int aPymtSchedId, double aAmount, string aCollPymtDate, int aAmountType, object userState) {
            if ((this.SplitVAT_VATDescendingRateOperationCompleted == null)) {
                this.SplitVAT_VATDescendingRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSplitVAT_VATDescendingRateOperationCompleted);
            }
            this.InvokeAsync("SplitVAT_VATDescendingRate", new object[] {
                        handle,
                        aPymtSchedId,
                        aAmount,
                        aCollPymtDate,
                        aAmountType}, this.SplitVAT_VATDescendingRateOperationCompleted, userState);
        }
        
        private void OnSplitVAT_VATDescendingRateOperationCompleted(object arg) {
            if ((this.SplitVAT_VATDescendingRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SplitVAT_VATDescendingRateCompleted(this, new SplitVAT_VATDescendingRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Microarea.Web.Services")]
    [System.Xml.Serialization.XmlRootAttribute("HeaderInfo", Namespace="urn:Microarea.Web.Services", IsNullable=true)]
    public partial class TBHeaderInfo : System.Web.Services.Protocols.SoapHeader {
        
        private string authTokenField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AuthToken {
            get {
                return this.authTokenField;
            }
            set {
                this.authTokenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ReqForPymtMaxLevelCompletedEventHandler(object sender, ReqForPymtMaxLevelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReqForPymtMaxLevelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReqForPymtMaxLevelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RequestForPaymentFileCompletedEventHandler(object sender, RequestForPaymentFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequestForPaymentFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RequestForPaymentFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string openingText {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string closingText {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RequestForPaymentCustUpdateCompletedEventHandler(object sender, RequestForPaymentCustUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequestForPaymentCustUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RequestForPaymentCustUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InstallmentDetails_CreateCompletedEventHandler(object sender, InstallmentDetails_CreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InstallmentDetails_CreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InstallmentDetails_CreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InstallmentDetails_DisposeCompletedEventHandler(object sender, InstallmentDetails_DisposeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InstallmentDetails_DisposeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InstallmentDetails_DisposeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InstallmentDetails_CalculateInstallmentDataCompletedEventHandler(object sender, InstallmentDetails_CalculateInstallmentDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InstallmentDetails_CalculateInstallmentDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InstallmentDetails_CalculateInstallmentDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int InstallmentNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string InstallmentDate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public int InstallmentPaymentType {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public double InstallmentAmount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CalcWithholdingTaxBalance_CreateCompletedEventHandler(object sender, CalcWithholdingTaxBalance_CreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalcWithholdingTaxBalance_CreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalcWithholdingTaxBalance_CreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CalcWithholdingTaxBalance_DisposeCompletedEventHandler(object sender, CalcWithholdingTaxBalance_DisposeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalcWithholdingTaxBalance_DisposeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalcWithholdingTaxBalance_DisposeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CalcWithholdingTaxBalance_CalculateWithholdingTaxBalanceCompletedEventHandler(object sender, CalcWithholdingTaxBalance_CalculateWithholdingTaxBalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalcWithholdingTaxBalance_CalculateWithholdingTaxBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalcWithholdingTaxBalance_CalculateWithholdingTaxBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int aPymtSchedId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public double aBalance {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SplitVAT_CreateCompletedEventHandler(object sender, SplitVAT_CreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SplitVAT_CreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SplitVAT_CreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SplitVAT_DisposeCompletedEventHandler(object sender, SplitVAT_DisposeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SplitVAT_DisposeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SplitVAT_DisposeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SplitVAT_VATDescendingRateCompletedEventHandler(object sender, SplitVAT_VATDescendingRateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SplitVAT_VATDescendingRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SplitVAT_VATDescendingRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591